services:
  ### MONITORING
  otel-collector:
    image: otel/opentelemetry-collector:0.111.0
    container_name: otel-collector
    restart: always
    command: ["--config=/etc/config.yml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector/config.yml:/etc/config.yml
    ports:
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
    networks:
      - monitoring
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring
    depends_on:
      - observability-playground

  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    restart: always
    ports:
      - "9009:9009"  # Mimir API endpoint
      - "9091:9090"  # Mimir Prometheus endpoint
    environment:
      - ENABLE_METRICS=true
      - ENABLE_API=true
    volumes:
      - ./mimir/mimir-config.yml:/etc/mimir/mimir-config.yml
    command:
      - "-config.file=/etc/mimir/mimir-config.yml"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    restart: always
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    networks:
      - monitoring
    depends_on:
      - prometheus
      - mimir

  ### SERVICES
  observability-playground:
    container_name: observability-playground
    restart: always
    build:
      dockerfile: ./build/Dockerfile
      context: .. 
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge